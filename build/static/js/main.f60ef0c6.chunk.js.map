{"version":3,"sources":["components/Buttons.js","components/MainForm.js","db.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","button","margin","spacing","padding","fontSize","textTransform","buttonContainer","display","flexDirection","alignItems","Buttons","handleSubmit","downloadCombinedTodayData","downloadCombinedData","classes","Box","Button","variant","color","className","endIcon","onClick","startIcon","title","fontWeight","marginBottom","MainForm","formData","handleInputChange","handlePhotoChange","currentDate","setCurrentDate","reff","useEffect","Date","toISOString","slice","justifyContent","maxWidth","border","borderRadius","boxShadow","Typography","TextField","required","fullWidth","name","type","value","streckennummer","onChange","onInput","e","target","Math","max","parseInt","toString","style","marginRight","id","placeholder","km","met","FormControl","component","RadioGroup","row","seite","FormControlLabel","control","Radio","label","sonstiges","handleChange","punktnummer","gvp","ref","el","current","accept","openDatabase","Promise","resolve","reject","request","indexedDB","open","onupgradeneeded","event","result","createObjectStore","keyPath","autoIncrement","onsuccess","db","onerror","error","getAllSubmissions","transaction","objectStore","getAll","root","flexWrap","width","height","backgroundColor","clearIndexedDB","a","clear","App","useState","photo","setFormData","useRef","intervalId","setInterval","console","log","clearInterval","submissions","setSubmissions","setSuccessOpen","successMessage","setSuccessMessage","errorMessage","setErrorMessage","then","data","catch","classnames","Paper","elevation","paper","files","reader","FileReader","onload","base64Photo","quality","image","Image","src","canvas","document","createElement","ctx","getContext","drawImage","compressedPhoto","toDataURL","length","newSubmission","submission","add","addSubmission","readAsDataURL","zip","JSZip","csvContent","map","entry","gvpInMeters","toLocaleString","minimumFractionDigits","join","file","forEach","index","date","replace","filename","base64Data","split","base64","generateAsync","content","url","window","URL","createObjectURL","link","href","download","click","todaySubmissions","filter","cur_date","Snackbar","autoHideDuration","onClose","reason","SnackbarContent","message","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","getElementById","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f60ef0c6.chunk.js","sourcesContent":["import { Box, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n    padding: \"10px 20px\",\n    fontSize: \"1rem\",\n    textTransform: \"none\",\n  },\n  buttonContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n}));\n\nconst Buttons = ({\n  handleSubmit,\n  downloadCombinedTodayData,\n  downloadCombinedData,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Box>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n        endIcon={<SendIcon />}\n        onClick={handleSubmit}\n      >\n        Abschicken\n      </Button>\n      <br />\n      <br />\n      <Box className={classes.buttonContainer}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          startIcon={<CloudDownloadIcon />}\n          onClick={() => downloadCombinedTodayData()}\n        >\n          Daten von heute herunterladen\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          startIcon={<CloudDownloadIcon />}\n          onClick={() => downloadCombinedData()}\n        >\n          Alle Daten herunterladen\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Buttons;\n","import {\n  Box,\n  FormControl,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  Typography,\n  makeStyles, // Import makeStyles\n} from \"@material-ui/core\";\nimport Input from \"@material-ui/core/Input\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React, { useEffect, useState } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    fontWeight: \"bold\",\n    fontSize: \"1.2rem\", // Adjust the font size\n    marginBottom: \"5px\", // Add some spacing below titles\n  },\n}));\n\nconst MainForm = ({\n  formData,\n  handleInputChange,\n  handlePhotoChange,\n  currentDate,\n  setCurrentDate,\n  reff,\n}) => {\n  useEffect(() => {\n    setCurrentDate(new Date().toISOString().slice(0, 10));\n  }, []);\n\n  const classes = useStyles(); // Initialize the useStyles\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      maxWidth=\"400px\"\n      margin=\"0 auto\"\n      padding=\"20px\"\n      border=\"1px solid #ccc\"\n      borderRadius=\"8px\"\n      boxShadow=\"0 0 5px rgba(0, 0, 0, 0.2)\"\n    >\n      <Typography variant=\"h5\" className={classes.title}>\n        Streckennummer\n      </Typography>\n      <TextField\n        required\n        fullWidth\n        name=\"streckennummer\"\n        type=\"number\"\n        value={formData.streckennummer}\n        onChange={handleInputChange}\n        margin=\"normal\"\n        onInput={(e) => {\n          e.target.value = Math.max(0, parseInt(e.target.value))\n            .toString()\n            .slice(0, 4);\n        }}\n      />\n\n      <Typography variant=\"h6\" className={classes.title}>\n        Kilometrierung\n      </Typography>\n\n      <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n        <TextField\n          required\n          style={{ marginRight: \"10px\" }}\n          id=\"km\"\n          name=\"km\"\n          type=\"number\"\n          placeholder=\"z.B. 145\"\n          value={formData.km}\n          onChange={handleInputChange}\n        />\n        <TextField\n          required\n          id=\"met\"\n          name=\"met\"\n          type=\"number\"\n          placeholder=\"02\"\n          value={formData.met}\n          onChange={handleInputChange}\n        />\n      </Box>\n\n      <Typography variant=\"h6\" className={classes.title}>\n        Seite\n      </Typography>\n\n      <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n        <FormControl component=\"fieldset\">\n          <RadioGroup\n            row\n            required\n            id=\"seite\"\n            name=\"seite\"\n            value={formData.seite}\n            onChange={handleInputChange}\n          >\n            <FormControlLabel value=\"L\" control={<Radio />} label=\"L\" />\n            <FormControlLabel value=\"R\" control={<Radio />} label=\"R\" />\n          </RadioGroup>\n        </FormControl>\n\n        <TextField\n          fullWidth\n          label=\"Sonstiges\"\n          id=\"sonstiges\"\n          name=\"sonstiges\"\n          value={formData.sonstiges}\n          onChange={formData.handleChange}\n        />\n      </Box>\n\n      <Typography variant=\"h6\" className={classes.title}>\n        Punktnummer\n      </Typography>\n\n      <TextField\n        required\n        fullWidth\n        name=\"punktnummer\"\n        value={formData.punktnummer}\n        onChange={handleInputChange}\n        margin=\"normal\"\n      />\n\n      <Typography variant=\"h6\" className={classes.title}>\n        GVP Länge, mm\n      </Typography>\n\n      <TextField\n        required\n        fullWidth\n        name=\"gvp\"\n        value={formData.gvp}\n        onChange={handleInputChange}\n        margin=\"normal\"\n      />\n\n      <Typography variant=\"h6\" className={classes.title}>\n        Datum\n      </Typography>\n\n      <TextField\n        required\n        fullWidth\n        name=\"currentDate\"\n        value={currentDate}\n        onChange={(e) => {\n          setCurrentDate(e.target.value);\n        }}\n        margin=\"normal\"\n      />\n\n      <Typography variant=\"h6\" className={classes.title}>\n        Foto hochladen\n      </Typography>\n\n      <input\n        ref={(el) => (reff.current = el)}\n        required\n        type=\"file\"\n        name=\"photo\"\n        accept=\"image/*;capture=camera\"\n        onChange={handlePhotoChange}\n      />\n    </Box>\n  );\n};\n\nexport default MainForm;\n","const dbName = \"AußendienstDB\";\r\nconst storeName = \"submissions\";\r\n\r\nexport function openDatabase() {\r\n  return new Promise((resolve, reject) => {\r\n    const request = indexedDB.open(dbName, 1);\r\n\r\n    request.onupgradeneeded = (event) => {\r\n      const db = event.target.result;\r\n      db.createObjectStore(storeName, { keyPath: \"id\", autoIncrement: true });\r\n    };\r\n\r\n    request.onsuccess = (event) => {\r\n      const db = event.target.result;\r\n      resolve(db);\r\n    };\r\n\r\n    request.onerror = (event) => {\r\n      reject(event.target.error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function addSubmission(db, submission) {\r\n  return new Promise((resolve, reject) => {\r\n    const transaction = db.transaction([storeName], \"readwrite\");\r\n    const store = transaction.objectStore(storeName);\r\n    const request = store.add(submission);\r\n\r\n    request.onsuccess = () => {\r\n      resolve();\r\n    };\r\n\r\n    request.onerror = () => {\r\n      reject(request.error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function getAllSubmissions(db) {\r\n  return new Promise((resolve, reject) => {\r\n    const transaction = db.transaction([storeName], \"readonly\");\r\n    const store = transaction.objectStore(storeName);\r\n    const request = store.getAll();\r\n\r\n    request.onsuccess = () => {\r\n      resolve(request.result);\r\n    };\r\n\r\n    request.onerror = () => {\r\n      reject(request.error);\r\n    };\r\n  });\r\n}\r\n","import { Box, Paper } from \"@material-ui/core\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport classnames from \"classnames\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"./App.css\";\nimport Buttons from \"./components/Buttons\";\nimport MainForm from \"./components/MainForm\";\nimport { openDatabase, addSubmission, getAllSubmissions } from \"./db\";\nimport JSZip from \"jszip\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexWrap: \"wrap\",\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"#f4f4f4\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    \"& > *\": {\n      padding: \"20px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n  },\n}));\n\n// Function to clear the IndexedDB\nconst clearIndexedDB = async (db) => {\n  return new Promise((resolve, reject) => {\n    const transaction = db.transaction([\"submissions\"], \"readwrite\");\n    const objectStore = transaction.objectStore(\"submissions\");\n\n    const request = objectStore.clear();\n\n    request.onsuccess = () => {\n      resolve();\n    };\n\n    request.onerror = (event) => {\n      reject(event.target.error);\n    };\n  });\n};\n\nfunction App() {\n  const classes = useStyles();\n  const [formData, setFormData] = useState({\n    streckennummer: \"\",\n    km: \"\",\n    met: \"\",\n    seite: false,\n    sonstiges: \"\",\n    punktnummer: \"\",\n    gvp: \"\",\n    photo: null,\n  });\n  const reff = useRef(null);\n\n  useEffect(() => {\n    const clearDatabaseEvery2Weeks = async () => {\n      try {\n        const db = await openDatabase();\n        await clearIndexedDB(db);\n        console.log(\"IndexedDB cleared.\");\n      } catch (error) {\n        console.error(\"Error clearing IndexedDB: \", error);\n      }\n    };\n\n    const intervalId = setInterval(\n      clearDatabaseEvery2Weeks,\n      14 * 24 * 60 * 60 * 1000\n    ); // 7 days in milliseconds\n\n    // Cleanup the interval when the component unmounts\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  const [submissions, setSubmissions] = useState([]); // Store all submissions\n\n  // State for displaying the success and error message\n  const [successOpen, setSuccessOpen] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [currentDate, setCurrentDate] = useState(\"\");\n\n  useEffect(() => {\n    openDatabase()\n      .then((db) => {\n        getAllSubmissions(db).then((data) => setSubmissions(data));\n      })\n      .catch((error) => console.error(\"Error opening database: \", error));\n  }, []);\n\n  const resetForm = () => {\n    setFormData({\n      streckennummer: \"\",\n      km: \"\",\n      met: \"\",\n      seite: \"\",\n      sonstiges: \"\",\n      punktnummer: \"\",\n      gvp: \"\",\n      photo: null,\n    });\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handlePhotoChange = (e) => {\n    const photo = e.target.files[0];\n    setFormData({\n      ...formData,\n      photo,\n    });\n  };\n\n  const handleSuccessClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setSuccessMessage(\"\");\n  };\n\n  const handleErrorClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setErrorMessage(\"\");\n  };\n\n  const handleSubmit = () => {\n    // Check if a photo is selected\n    if (!formData.photo) {\n      setErrorMessage(\"Bitte wählen Sie ein Foto aus, bevor Sie fortfahren.\");\n      setSuccessMessage(\"\"); // Clear any existing success message\n      return;\n    }\n    // Clear the error message if a photo is selected\n    setErrorMessage(\"\");\n    setSuccessMessage(\"Erfolgreich hinzugefügt\");\n    // Reset the form after a successful submission\n    resetForm();\n\n    const reader = new FileReader();\n\n    reader.onload = (event) => {\n      const base64Photo = event.target.result;\n      const maxSizeInBytes = 0.5 * 1024 * 1024; // 0.5 MB\n      let quality = 0.9;\n\n      const image = new Image();\n      image.src = base64Photo;\n\n      image.onload = () => {\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n\n        canvas.width = image.width;\n        canvas.height = image.height;\n\n        ctx.drawImage(image, 0, 0, image.width, image.height);\n        // Convert the canvas content to a data URL with JPEG format\n        let compressedPhoto = canvas.toDataURL(\"image/jpeg\", quality);\n\n        while (compressedPhoto.length > maxSizeInBytes && quality >= 0.1) {\n          // Reduce quality and recompress\n          quality -= 0.1;\n          compressedPhoto = canvas.toDataURL(\"image/jpeg\", quality);\n        }\n\n        if (compressedPhoto.length <= maxSizeInBytes) {\n          // Append new submission to the array\n          const newSubmission = {\n            streckennummer: formData.streckennummer,\n            km: formData.km,\n            met: formData.met,\n            seite: formData.seite,\n            sonstiges: formData.sonstiges,\n            punktnummer: formData.punktnummer,\n            gvp: formData.gvp,\n            currentDate: currentDate,\n            photo: compressedPhoto,\n          };\n          // Save to IndexedDB each time the user submits\n          openDatabase()\n            .then((db) => {\n              addSubmission(db, newSubmission)\n                .then(() => {\n                  // Fetch updated submissions\n                  getAllSubmissions(db)\n                    .then((data) => {\n                      setSubmissions(data);\n                      setSuccessMessage(\"Erfolgreich hinzugefügt\");\n                      setSuccessOpen(true);\n                    })\n                    .catch((error) =>\n                      console.error(\"Error fetching submissions: \", error)\n                    );\n                })\n                .catch((error) =>\n                  console.error(\"Error adding submission: \", error)\n                );\n            })\n            .catch((error) => console.error(\"Error opening database: \", error));\n        } else {\n          console.error(\"Compressed photo size is still too large.\");\n          // Handle the situation where the photo can't be compressed to the desired size.\n        }\n      };\n    };\n    reader.readAsDataURL(formData.photo);\n    reff.current.value = \"\";\n  };\n\n  const downloadCombinedTodayData = () => {\n    const zip = new JSZip();\n    const todaySubmissions = submissions.filter(\n      (entry) => entry.currentDate === currentDate\n    );\n    // Add the CSV data to the ZIP file\n    const csvContent =\n      \"Streckennummer;Kilometrierung; Seite; Sonstiges; Punktnummer; GVP Länge; Datum\\n\" +\n      todaySubmissions\n        .map((entry) => {\n          const gvpInMeters = (entry.gvp / 1000).toLocaleString(\"de-DE\", {\n            minimumFractionDigits: 2,\n          });\n          return `${entry.streckennummer};${entry.km},${entry.met};${entry.seite};${entry.sonstiges};${entry.punktnummer};${gvpInMeters};${currentDate}`;\n        })\n        .join(\"\\n\");\n\n    zip.file(\"daten_von_heute.csv\", csvContent);\n\n    // Add the image files to the ZIP file\n    todaySubmissions.forEach((el, index) => {\n      const date = el.currentDate.replace(/-/g, \"\");\n      const filename = `${el.streckennummer}_${el.km},${el.met}_${el.seite}_${el.punktnummer}_${date}.jpg`;\n      const base64Data = el.photo.split(\",\")[1];\n      zip.file(filename, base64Data, { base64: true });\n    });\n\n    // Create and trigger a download link for the ZIP file\n    zip.generateAsync({ type: \"blob\" }).then((content) => {\n      const cur_date = new Date().toISOString().slice(0, 10);\n      const url = window.URL.createObjectURL(content);\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.download = `${cur_date}.zip`;\n      link.click();\n    });\n  };\n\n  const downloadCombinedData = () => {\n    const zip = new JSZip();\n    // Add the CSV data to the ZIP file\n    const csvContent =\n      \"Streckennummer;Kilometrierung; Seite; Sonstiges; Punktnummer; GVP Länge; Datum\\n\" +\n      submissions\n        .map((entry) => {\n          const gvpInMeters = (entry.gvp / 1000).toLocaleString(\"de-DE\", {\n            minimumFractionDigits: 2,\n          });\n          return `${entry.streckennummer};${entry.km},${entry.met};${entry.seite};${entry.sonstiges};${entry.punktnummer};${gvpInMeters};${entry.currentDate}`;\n        })\n        .join(\"\\n\");\n\n    zip.file(\"alle_daten.csv\", csvContent);\n\n    // Add the image files to the ZIP file\n    submissions.forEach((el, index) => {\n      const date = el.currentDate.replace(/-/g, \"\");\n      const filename = `${el.streckennummer}_${el.km},${el.met}_${el.seite}_${el.punktnummer}_${date}.jpg`;\n      const base64Data = el.photo.split(\",\")[1];\n      zip.file(filename, base64Data, { base64: true });\n    });\n\n    // Create and trigger a download link for the ZIP file\n    zip.generateAsync({ type: \"blob\" }).then((content) => {\n      const url = window.URL.createObjectURL(content);\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.download = \"combined_data.zip\";\n      link.click();\n    });\n  };\n\n  return (\n    <div className={classnames(classes.root, \"appWrapper\")}>\n      <Paper elevation={3} classes={classes.paper}>\n        <Box>\n          <Typography style={{ padding: 16 }} variant=\"h4\">\n            Die GV-Targeterfassung\n          </Typography>\n        </Box>\n        <MainForm\n          reff={reff}\n          formData={formData}\n          handleInputChange={handleInputChange}\n          handlePhotoChange={handlePhotoChange}\n          currentDate={currentDate}\n          setCurrentDate={setCurrentDate}\n        />\n        <Buttons\n          handleSubmit={handleSubmit}\n          downloadCombinedData={downloadCombinedData}\n          downloadCombinedTodayData={downloadCombinedTodayData}\n        />\n      </Paper>\n      <Snackbar\n        open={!!successMessage}\n        autoHideDuration={6000}\n        onClose={handleSuccessClose}\n      >\n        <SnackbarContent\n          message={successMessage}\n          style={{ backgroundColor: \"#92b493\" }}\n        />\n      </Snackbar>\n\n      <Snackbar\n        open={!!errorMessage}\n        autoHideDuration={6000}\n        onClose={handleErrorClose}\n      >\n        <SnackbarContent\n          message={errorMessage}\n          style={{ backgroundColor: \"#FF5722\" }}\n        />\n      </Snackbar>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}